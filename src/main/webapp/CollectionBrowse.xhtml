<ui:composition
	template="templates/sub_template/template_image_tiledlist.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:imjc="http://java.sun.com/jsf/composite/components"
	xmlns:dialog="http://java.sun.com/jsf/composite/components/dialogs"
	xmlns:menu="http://java.sun.com/jsf/composite/components/menu"
	xmlns:col="http://java.sun.com/jsf/composite/components/collection"
	xmlns:upload="http://java.sun.com/jsf/composite/components/upload"
	xmlns:item="http://java.sun.com/jsf/composite/components/item">

	<ui:param name="paginatorListSessionBean" value="#{CollectionItemsBean}" />
	<ui:param name="title" value="#{not empty CollectionItemsBean.query or not empty CollectionItemsBean.facetQueryString ? lbl.search_results : CollectionItemsBean.collection.title}" />
	<ui:param name="headline" value="#{title}" />
	<ui:param name="searchLabel" value="#{CollectionItemsBean.collection.title}" />
	<ui:param name="currentMainMenu" value="collection" />
	<ui:param name="browseToAllItemsUrl" value="#{Navigation.collectionUrl}#{CollectionItemsBean.id}?q=" />
	<ui:param name="imejiResource" value="#{CollectionItemsBean.collection}" />
	<ui:param name="backLink1" value="#{not empty CollectionItemsBean.query or not empty CollectionItemsBean.facetQueryString ? browseToAllItemsUrl : ''}"/>
	<ui:param name="backlinkTitle1" value="#{CollectionItemsBean.collection.title}"/>

	 <ui:define name="authorization">
		 #{Auth.init(CollectionItemsBean.collection)}
	 </ui:define>
	 
	 <ui:define name="subHeadline">
	 	<ui:fragment rendered="#{paginatorListSessionBean.simpleQuery == ''  and paginatorListSessionBean.facetQuery.isEmpty()}">
		 	<span>#{lbl.by} #{CollectionItemsBean.authorsShort}</span>
		 	<span class="imj_sep">|</span> 
		 	<a href="#content">
				<span class="moreCollection"  onclick="$('.collectionAbout').slideDown(300);$('.lessCollection').show(); $(this).hide(); draw_qr();">
					<span>#{lbl.more_information}</span><span class="fa fa-angle-right"/>
				</span>
			</a>
			<a href="#">
				<span class="lessCollection" style="display:none;" onclick="$('.collectionAbout').slideUp(300);$('.moreCollection').show(); $(this).hide();">
					<span>#{lbl.less}</span><span class="fa fa-angle-down"/>
				</span>
			</a>
		</ui:fragment>
	 </ui:define>
	 
	 <ui:define name="collectionAbout">
		<div class="collectionAbout">
			<div class="imj_sectionTitle">
		 		<span>#{lbl.informations}</span>
		 		<a href="#" class="lessCollection" style="display:none;" onclick="$('.collectionAbout').slideUp(300);$('.moreCollection').show();$('.lessCollection').hide();">
					<span class="fa fa-angle-down"/>
				</a>
			</div>
			<div class="imj_section"/><br/>
			<ui:fragment rendered="#{CollectionItemsBean.collection.status == 'WITHDRAWN'}">
				<div class="imj_infodataSet imj_mediaWithdrawn">
					#{lbl.withdrawn}<br/>
					<h:outputText value="#{CollectionItemsBean.collection.discardComment}" escape="false"/>
				</div>
			</ui:fragment>
			<col:details bean="#{CollectionItemsBean}" applicationUrl="#{Navigation.applicationUrl}" lbl="#{lbl}"/>
			<div class="imj_sectionTitle">
		 		<span>#{lbl.items}</span>
			</div>
			<div class="imj_section"/>
		</div>
	 </ui:define>
	 
	 <ui:define name="actionsMenu">
	 	<ui:fragment rendered="#{CollectionItemsBean.collection.status != 'WITHDRAWN'}">
		 	<h:form id="colForm">
				<h:commandLink id="upload" rendered="#{Auth.update}" action="#{CollectionItemsBean.setShowUpload(false)}" value="" styleClass="imj_openUploadDialog" onclick="openDialog('uploadDialog');">
					<f:ajax render="@none"/>
					<span class="fa fa-upload"/>#{lbl.upload}
				</h:commandLink>
				<ui:fragment rendered="#{Auth.loggedIn and (!CollectionItemsBean.collection.isSubCollection() or Auth.update)}">
					<div class="dropdown">
						<a><span class="fa fa fa-folder-o"/>#{lbl.collection}<span class="fa fa-angle-down"/></a>
						<div class="content">
							<ui:fragment rendered="#{Auth.update}">
								<ui:fragment rendered="#{CollectionItemsBean.collection.isSubCollection()}">
									<a onclick="openDialog('editSubCollection');">
										<span class="fa fa-pencil"/>#{lbl.edit_name}
									</a>
								</ui:fragment>
								<ui:fragment rendered="#{!CollectionItemsBean.collection.isSubCollection()}">
									<a href="#{Navigation.collectionUrl}#{CollectionItemsBean.id}/edit">
										<span class="fa fa-pencil"/>#{lbl.collection_edit_metadata}
									</a>
								</ui:fragment>
							</ui:fragment>
							<ui:fragment rendered="#{Auth.admin and !CollectionItemsBean.collection.subCollection}">
								<a href="#{Navigation.collectionUrl}#{CollectionItemsBean.id}/share?q=#{CollectionItemsBean.query}&amp;fq=#{CollectionItemsBean.facetQueryString}">
									<span class="fa fa-users"/>#{lbl.share}
								</a>
								<h:commandLink rendered="#{CollectionItemsBean.numberOfItems > 0 and WorkflowBean.release(CollectionItemsBean.collection)}" action="#{CollectionItemsBean.actionMenu.searchItemsWihoutLicense}" onclick="openDialog('releaseCollection');">
									<f:ajax render=":rel:f"/>
									<span class="fa fa-globe"/>#{lbl.release}
								</h:commandLink>
								<ui:fragment rendered="#{WorkflowBean.createDOI(CollectionItemsBean.collection)}">
									<ui:fragment  rendered="#{Auth.sysAdmin and not empty CollectionItemsBean.collection.doi}">
										<a onclick="openDialog('doiInput')">
											<span class="fa fa-link"/>#{lbl.change_doi}
										</a>
									</ui:fragment>
									<ui:fragment rendered="#{Configuration.doiServiceUrl != null and Configuration.doiServiceUrl != '' and empty CollectionItemsBean.collection.doi}">
										<a id="lnkCreateDOI" onclick="openDialog(#{Auth.sysAdmin ? '\'createDOI\'' : '\'getDOIDialog\''})">
											<span class="fa fa-link"/>#{lbl.createDOI}
										</a>
									</ui:fragment>
									<ui:fragment rendered="#{Auth.sysAdmin and empty Configuration.doiServiceUrl and empty CollectionItemsBean.collection.doi}">
										<a id="lnkInputDOI" onclick="openDialog('doiInput')">
											<span class="fa fa-link"/>#{lbl.createDOI}
										</a>
									</ui:fragment>
								</ui:fragment>
							</ui:fragment>
							<ui:fragment rendered="#{Auth.loggedIn and not CollectionItemsBean.collection.isSubCollection()}">
								#{SubscriptionBean.init(CollectionItemsBean.collection)}
								<ui:fragment rendered="#{not SubscriptionBean.isSubscribed(SessionBean.user, CollectionItemsBean.collection)}">
									<a onclick="openDialog('subscribe');">
										<span class="fa fa-envelope"/>#{lbl.subscribe}
									</a>
								</ui:fragment>
								<ui:fragment rendered="#{SubscriptionBean.isSubscribed(SessionBean.user, CollectionItemsBean.collection)}">
									<a onclick="openDialog('unsubscribe');">
										<span class="fa fa-times"/>#{lbl.unsubscribe}
									</a>
								</ui:fragment>
							</ui:fragment>
							<ui:fragment rendered="#{Auth.delete}">
								<ui:fragment rendered="#{WorkflowBean.delete(CollectionItemsBean.collection)}">
									<a onclick="openDialog('deleteCollection');">
										 <span class="fa fa-trash"/>#{lbl.delete}
									</a>
									<h:commandLink id="moveCollection" rendered="#{CollectionItemsBean.collection.isSubCollection()}" action="#{MoveItemsBean.searchCollectionsForMove(CollectionItemsBean.collection.id.toString())}" onclick="openDialog('moveCol');">
										<span class="fa fa-hand-o-right"/>#{lbl.move}
										<f:ajax render=":move:form"/>
									</h:commandLink>
								</ui:fragment>
							</ui:fragment>
							<ui:fragment rendered="#{Auth.admin and WorkflowBean.withdraw(CollectionItemsBean.collection)}">
								<a onclick="openDialog('withdrawCollection');">
									 <span class="fa fa-ban"/>#{lbl.withdraw}
								</a>
							</ui:fragment>
						</div>
					</div>
				</ui:fragment>
				<ui:fragment rendered="#{Auth.update}">
					<ui:fragment rendered="#{empty SessionBean.selected}">
						<a  onclick="openDialog('addSubCollection'); document.getElementById('cr:subColForm:name').focus()">
							<span class="fa fa-plus"/>#{lbl.subcollection}
						</a>
						<ui:fragment rendered="#{CollectionItemsBean.numberOfItemsOfCollection > 0}">
							<div class="dropdown">
								<a><span class="fa fa-files-o"/>#{CollectionItemsBean.numberOfItemsOfCollection} #{CollectionItemsBean.numberOfItemsOfCollection  != 1 ? lbl.items : lbl.item}<span class="fa fa-angle-down"/></a>
								<div class="content">
									<a href="#{Navigation.applicationUrl}editbatch?col=#{CollectionItemsBean.id}" >
										<span class="fa fa-pencil"/>#{lbl.edit_all}
									</a>
									<a href="#{Navigation.applicationUrl}edit/license?collection=#{CollectionItemsBean.id}" >
										<span class="fa fa-copyright"/>#{lbl.edit_all_licenses}
									</a>
									<ui:fragment rendered="#{WorkflowBean.delete(CollectionItemsBean.collection)}">
										<a onclick="openDialog('deleteItems');"  >
											<span class="fa fa-trash"/>#{lbl.delete_all}
										</a>
									</ui:fragment>
								</div>
							</div>
						</ui:fragment>
					</ui:fragment>
				</ui:fragment>
			</h:form>
			<item:selectedActionMenu id="selMenu" context="#{currentMainMenu}" itemsBean="#{paginatorListSessionBean}" rendered="#{not empty SessionBean.selected}"/>		
			<ui:fragment rendered="#{empty SessionBean.selected}">
				<a href="#{Navigation.applicationUrl}exportServlet?format=folder&amp;col=#{CollectionItemsBean.collection.idString}&amp;q=#{CollectionItemsBean.query}" target="_blank">
					<span class="fa fa-download"/>#{lbl.download_files}
				</a>
			</ui:fragment>
			<a class="fa fa-filter responsiveMenuBtn" style="float:right" data-menu="facetsArea" />
		</ui:fragment>
	 </ui:define>
	 
	 <ui:define name="modalDialogs_from_site">
	 	<h:panelGroup id="dialogs">
		 	<upload:dialog colId="#{CollectionItemsBean.collection.id.toString()}" id="uploadDialog" bean="#{CollectionItemsBean}"/>
		 	<dialog:confirmationDialog submitAction="deleteAll" bean="#{CollectionItemsBean}" confirmationText="#{msg.confirmation_delete_items}?" submitLabel="#{lbl.delete}" dialogId="deleteItems" />
		 	<col:subCollectionForm id="cr" dialogId="addSubCollection" parentCollection="#{CollectionItemsBean.collection}"/>
		 	<col:subCollectionForm id="ed" dialogId="editSubCollection" collection="#{CollectionItemsBean.collection}"/>
		 	<dialog:confirmationDialog id="rel" submitAction="release" bean="#{CollectionItemsBean.actionMenu}" confirmationText="#{msg.confirmation_release_collection}" confirmationText2="#{CollectionItemsBean.actionMenu.releaseMessage} " confirmationTextLicense="#{CollectionItemsBean.actionMenu.countOfItemsWithoutLicense &gt; 0 ? LicenseViewer.getLicense(Configuration.defaultLicense) : ''}" submitLabel="#{lbl.release}" dialogId="releaseCollection"/>
		 	<dialog:confirmationDialog id="del" submitAction="delete" bean="#{CollectionItemsBean.actionMenu}" confirmationText="#{msg.confirmation_delete_collection}?" submitLabel="#{lbl.delete}" dialogId="deleteCollection" />
		 	<dialog:confirmationReasonedDialog id="dis" submitAction="withdraw" bean="#{CollectionItemsBean.actionMenu}" confirmationText="#{msg.confirmation_withdraw_collection}" submitLabel="#{lbl.withdraw}" dialogId="withdrawCollection"/>
		 	<dialog:confirmationDialog id="sub" submitAction="subscribe" bean="#{SubscriptionBean}"  confirmationText="#{msg.confirmation_subscribe}" submitLabel="#{lbl.subscribe}" dialogId="subscribe" />
			<dialog:confirmationDialog id="usub" submitAction="unSubscribe" bean="#{SubscriptionBean}" confirmationText="#{msg.confirmation_unsubscribe}" submitLabel="#{lbl.unsubscribe}" dialogId="unsubscribe" />
		 	<dialog:dialogOptionDialog id="cdoi" dialogId="createDOI" bean="#{CollectionItemsBean.actionMenu}" col="#{CollectionItemsBean.collection}" submitId1="doiInput" submitId2="getDOIDialog" confirmationText="#{empty CollectionItemsBean.collection.doi ? '' : msg.collection_has_doi_warning}" submitLabel1="#{lbl.createDOI_manually}" submitLabel2="#{lbl.createDOI_from_service}" />
			<dialog:confirmationDialog id="gdoi" dialogId="getDOIDialog" submitAction="createDOI" col="#{CollectionItemsBean.collection}" bean="#{CollectionItemsBean.actionMenu}" confirmationText="#{msg.confirmation_create_DOI}" submitLabel="#{lbl.createDOI}" />
		 	<dialog:doiInputDialog id="idoi" col="#{CollectionItemsBean.collection}" bean="#{CollectionItemsBean.actionMenu}" confirmationText="#{empty CollectionItemsBean.collection.doi ? '' : msg.collection_has_doi_warning}" submitLabel="#{lbl.save}" dialogId="doiInput"/>
		 	<dialog:move id="move" dialogId="moveCol" objectId="#{CollectionItemsBean.collection.id.toString()}" colId="#{CollectionItemsBean.collection.id.toString()}" parentId=":move" />
	 		<dialog:selected id="selDialogs" context="#{currentMainMenu}" itemsBean="#{paginatorListSessionBean}"/>
	 	</h:panelGroup>
	 </ui:define>

	<ui:define name="searchQuery">
		<imjc:searchQueryDisplayArea searchBean="#{paginatorListSessionBean}"
			navBean="#{Navigation}"
			label="#{lbl.search_for} #{HistorySession.currentPage.getInternationalizedName(InternationalizationBean.locale)}" />
	</ui:define>
	
	<ui:define name="additonalFooterScripts">
		<script type="text/javascript" src="#{Navigation.applicationUrl}resources/js/qrcode.js"/>		
		<script type="text/javascript">
			jQuery(document).ready(function(){
				if(#{CollectionItemsBean.showUpload}){openDialog('uploadDialog');}
			});	
			var draw_qrcode = function(text, typeNumber, errorCorrectLevel){
				document.write(create_qrcode(text, typeNumber, errorCorrectLevel));
			};
			var create_qrcode = function(text, typeNumber, errorCorrectLevel, table) {
				var qr = qrcode(typeNumber || 20, errorCorrectLevel || 'M');
				qr.addData(text);
				qr.make();
				return qr.createImgTag();
			};
			function draw_qr(){
				var qrHtml = document.getElementById('qr');
				qrHtml.innerHTML = create_qrcode('{key:"#{SessionBean.user.apiKey}",col:"#{CollectionItemsBean.collection.id}"}');
			}
		</script>	 
	</ui:define>
	<ui:define name="uploader">
 		<upload:upload id="uploader" browseButtonId="selectFiles" license="#{CollectionItemsBean.licenseEditor.license}" collectionId="#{CollectionItemsBean.collection.id.toString()}" updateButtonId="uploadDialog:uploadForm:updateItems" dropElementId="uploadDialog"/>		
 	</ui:define>
</ui:composition>