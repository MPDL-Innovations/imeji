<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:lic="http://java.sun.com/jsf/composite/components/license">
	
	<composite:interface componentType="StatusComponent">
		<composite:attribute name="browseButtonId"/>
		<composite:attribute name="collectionId"/>
		<composite:attribute name="updateButtonId"/>
		<composite:attribute name="dropElementId"/>
		<composite:attribute name="uploadId"/>
		<composite:attribute name="license"/>
	</composite:interface>
	
	<composite:implementation>
		<h:panelGroup id="licenseVariables">
			<h:inputHidden id="name" value="#{cc.attrs.license.name}"/>
			<h:inputHidden id="label" value="#{cc.attrs.license.label}"/>
			<h:inputHidden id="url" value="#{cc.attrs.license.url}"/>
		</h:panelGroup>
		<script type="text/javascript" src="#{Navigation.applicationUrl}resources/plupload/2.3.6/js/plupload.full.min.js"></script>
		<script>
			var totalFiles = 0;
			var uploadedFiles = 0;
			var uploader = new plupload.Uploader({
				runtimes : 'html5,flash,silverlight,html4',
				browse_button : '#{cc.attrs.browseButtonId}',
				url : '#{Navigation.applicationUrl}uploadServlet?col=#{cc.attrs.collectionId}&amp;apiKey=#{SessionBean.user.apiKey}',
				max_file_size : '#{Configuration.uploadMaxFileSize}kb',
				multi_selection : true,
				dragdrop: true,
				drop_element: $('.uploadDropArea').toArray(),// '#{cc.attrs.dropElementId}',
				multipart_params: {
					licenseName: document.getElementById('uploader:name').value,
					licenseLabel:  document.getElementById('uploader:label').value,
					licenseUrl:  document.getElementById('uploader:url').value,
					},
				init: {	
					PostInit: function() {
						totalFiles = 0
						uploadedFiles = 0;			
					},
					 FileFiltered: function(up, file) {
						closeDialog('uploadDialog');
						$(".uploadPanel").show();
					},
					FilesAdded: function(up, files) {
						totalFiles =  files.length;
						lockPage();
						addUploadStatusMessage(0,totalFiles);
						var licenseName = document.getElementById('uploader:name').value;
						var licenseLabel = document.getElementById('uploader:label').value;
						var licenseUrl = document.getElementById('uploader:url').value;
						uploader.settings.multipart_params = { licenseName: licenseName, licenseLabel: licenseLabel, licenseUrl: licenseUrl};
						uploader.start();
						document.getElementById('totalSize').innerHTML = " " + formatBytes(up.total.size);
					},
					BeforeUpload : function(up, file) {
						var source = file.getSource();
						if(source.relativePath){
							up.settings.url ='#{Navigation.applicationUrl}uploadServlet?col=#{cc.attrs.collectionId}&amp;apiKey=#{SessionBean.user.apiKey}' + "&amp;path=" + source.relativePath;
						}
					},
					UploadProgress: function(up, file) {
						addUploadStatusMessage(uploadedFiles,totalFiles,file.name,file.percent);
						$( ".progressBar" ).css("width", up.total.percent + "%");
						var seconds = ((up.total.size - up.total.loaded) / up.total.bytesPerSec + (up.total.queued * 0.1));
						var hms = new Date(seconds * 1000).toISOString().substr(11, 8); 
						document.getElementById('expectedDuration').innerHTML = " " + hms;
					},
					UploadComplete: function(up, files) {
						stopUploader();
					},
					Error: function(up, err) {
				    	addUploadStatusMessage(uploadedFiles,totalFiles);
				    	addUploadErrorMessage(err.file.name, err.response);
				    },
				    FileUploaded: function(up, file, info) {
				    	 uploadedFiles = uploadedFiles + 1;
				    	 addUploadStatusMessage(uploadedFiles,totalFiles);	
		            },
				}
			});
			uploader.init();
			function addUploadStatusMessage(uploaded, total, filename, percent){
				if(filename != null){
					$(".uploadPanelContent").html('<pre>' + filename + '</pre>');
				}
			}
			function addUploadStatusMessageDone(uploaded){
				$(".uploadPanel").hide();
				if(uploaded != '0'){
					document.getElementById('imj_pageMessageArea').innerHTML += '<div id="uploadStatus" class="imj_message imj_messageSuccess" style="display=block;"><span class="fa fa-check" style="margin-right: 10px;"/>' + uploaded + ' #{lbl.files} #{lbl.uploaded}.<span class="imj_messageAreaCloseBtn"  onclick="this.parentElement.style.display=\'none\'; setTimeout(function() {$(this).fadeOut(1000); }, 2000);">x</span><span id="uploadStatusContent"></span></div>';
				}
			}
			function addUploadErrorMessage(filename, error){
				document.getElementById('imj_pageMessageArea').innerHTML += '<div  class="imj_message imj_messageError"><span class="fa fa-exclamation" style="margin-right: 10px;"/><span class="imj_messageAreaCloseBtn" onclick="this.parentElement.style.display=\'none\';">x</span>'+ filename + ' #{lbl.not_uploaded}: ' + error +'</div>';
			}
			function stopUploader(){
				uploader.stop();
				document.getElementById('#{cc.attrs.updateButtonId}').click();
				addUploadStatusMessageDone(uploadedFiles);
				uploader.destroy();
				closeUploader();
			}
			function closeUploader(){
				window.history.pushState("","", window.location.href.replace('showUpload=1', ''));
				closeDialog('uploadDialog');
			}
		</script>
		
	</composite:implementation>
</html>