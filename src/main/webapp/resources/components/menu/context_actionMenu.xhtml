<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:composite="http://java.sun.com/jsf/composite">
	
	<composite:interface shortDescription="Menu for context interactions as sorting, filter, download, etc. / @require attributes: isUserLoggedIn, navBean">
		
		<composite:attribute name="isUserLoggedIn" type="java.lang.Boolean" default="false" required="true" shortDescription="@type: Boolean"/>
		<composite:attribute name="navBean" type="java.lang.Object" required="true" shortDescription="@type: Object, used for several URL paths"/>
		
		<composite:attribute name="sortBean" type="java.lang.Object" required="false" shortDescription="@type: Object, used for sorting elements (e.g. in bibliographic list - order elements ascending)"/>
		<composite:attribute name="filterBean" type="java.lang.Object" required="false" shortDescription="@type: Object, used for filtering elements (e.g. in bibliographic list - my items without withdrawed items)"/>
		
		<composite:attribute name="menuClass" type="java.lang.String" default="imj_contentSubMenu" required="false" shortDescription="@type: String, used for the component and will be extended with 'Item' for every menu entry, @default: imj_contentSubMenu"/>
		<composite:attribute name="contextId" type="java.lang.String" default="" required="false" shortDescription="@type: String, required for Download"/>
		<composite:attribute name="exportQuery" type="java.lang.String" default="" required="false" shortDescription="@type: String, @dependencies: contextId and navBean for Download"/>
		<composite:attribute name="collectionStatus" type="java.lang.String" default="PENDING" required="false" shortDescription="@type: String, for menu handling in case of withdraw, release, delete, ..."/>
		
		<composite:attribute name="isEditable" type="java.lang.Boolean" default="false" required="false" shortDescription="@type: Boolean, required for rights managment"/>
		<composite:attribute name="isDeletable" type="java.lang.Boolean" default="false" required="false" shortDescription="@type: Boolean, required for rights managment"/>
		<composite:attribute name="hasContent" type="java.lang.Boolean" default="false" required="false" shortDescription="@type: Boolean, required to show menus (e.g. only release items with content)"/>
	</composite:interface>
	
	<composite:implementation>
		
		<div class="#{cc.attrs.menuClass.trim()}">
			
			<h:panelGroup layout="block" styleClass="imj_overlayMenu #{cc.attrs.menuClass.trim()}Item" rendered="#{cc.attrs.sortBean != null}">
				<div class="imj_menuHeader">
					<h:outputText id="txtSort" value="#{lbl.sorting}" styleClass="imj_headerEntry"/>
				</div>
				<div class="imj_menuBody">
					<h:outputText value="#{lbl.sort_by}: "/>
					<h:form>
						<h:selectOneMenu id="selSort" value="#{cc.attrs.sortBean.selectedSortCriterion}" onchange="submit();">
							<f:selectItems id="sortItem" value="#{cc.attrs.sortBean.sortMenu}"/>
						</h:selectOneMenu>
						<h:commandLink id="lnkSortAsc" value="&#160;" styleClass="imj_buttonOrderByAsc_15" action="#{cc.attrs.sortBean.toggleSortOrder}" rendered="#{cc.attrs.sortBean.selectedSortOrder == 'ASCENDING'}"/>
						<h:commandLink id="lnkSortDesc" value="&#160;" styleClass="imj_buttonOrderByDesc_15" action="#{cc.attrs.sortBean.toggleSortOrder}" rendered="#{cc.attrs.sortBean.selectedSortOrder != 'ASCENDING'}"/>
					</h:form>
				</div>
			</h:panelGroup>
			
			<ui:fragment rendered="#{cc.attrs.isUserLoggedIn}">
				
				<h:panelGroup layout="block" styleClass="imj_overlayMenu #{cc.attrs.menuClass.trim()}Item" rendered="#{cc.attrs.filterBean != null}">
					<div class="imj_menuHeader">
						<h:outputText id="txtFilter" value="#{lbl.filter}" styleClass="imj_headerEntry"/>
					</div>
					<div class="imj_menuBody">
						<h:outputText value="#{lbl.filter_by}: "/>
						<h:selectOneMenu id="selFilter" value="#{cc.attrs.filterBean.selectedFilter}" onchange="window.location.href = '?f=' + this.value" readonly="true">
							<f:selectItems id="filterItem" value="#{cc.attrs.filterBean.filterMenu}"/>
						</h:selectOneMenu>
					</div>
				</h:panelGroup>
				
				
				<div class="imj_overlayMenu #{cc.attrs.menuClass.trim()}Item">
					<div class="imj_menuHeader">
						<h:outputText value="#{lbl.actions}" styleClass="imj_headerEntry"/>
					</div>
					<div class="imj_menuBody">
						<ul class="imj_overlayMenuList">
							
							<ui:fragment rendered="#{cc.attrs.isEditable and cc.attrs.collectionStatus.trim().toUpperCase() == 'PENDING' and cc.attrs.hasContent}">
								<li>
									<h:outputLink styleClass="imj_SubMenuItem" value="#" onclick="openDialog('releaseMenuItemDialog');">
										<h:outputText value="#{lbl.collection_release}"/>
									</h:outputLink>
								</li>
							</ui:fragment>
							
							<ui:fragment rendered="#{cc.attrs.isEditable and cc.attrs.collectionStatus.trim().toUpperCase() == 'RELEASED'}">
								<li>
									<h:outputLink id="lnkWithdrawCollection" value="#" onclick="openDialog('withdrawMenuItemDialog');">
										<h:outputText value="#{lbl.withdraw}"/>
									</h:outputLink>
								</li>
							</ui:fragment>
							
							<ui:fragment rendered="#{cc.attrs.isDeletable}">
								<li>
									<h:outputLink styleClass="imj_SubMenuItem" value="#" onclick="openDialog('deleteMenuItemDialog');">
										<h:outputText value="#{lbl.delete}"/>
									</h:outputLink>
								</li>
							</ui:fragment>
							
							<ui:fragment rendered="#{cc.attrs.navBean != null}">
								<li class="imj_listItemSeparator">
									<h:outputLink id="lnkCreate" value="#{cc.attrs.navBean.createCollectionUrl}?reset=1">
										<h:outputText value="#{lbl.collection_create}"/>
									</h:outputLink>
								</li>
							</ui:fragment>
						</ul>
					</div>
				</div>
				
				
				
				<ui:fragment rendered="#{cc.attrs.contextId.trim().length() > 0 and cc.attrs.navBean != null}">
					<div class="imj_overlayMenu #{cc.attrs.menuClass.trim()}Item">
						<div class="imj_menuHeader">
							<h:outputText value="#{lbl.download}" styleClass="imj_headerEntry"/>
						</div>
						<div class="imj_menuBody">
							<ul class="imj_overlayMenuList">
								<li>
									<h:outputLink value="#{cc.attrs.navBean.applicationUrl}export?format=zip&amp;type=image&amp;n=10000&amp;col=#{cc.attrs.contextId.trim()}&amp;q=#{cc.attrs.exportQuery.trim()}" target="_blank">
										<h:outputText value="#{lbl.export_zip}"/>
									</h:outputLink>
								</li>
								<li>
									<h:outputLink value="#{cc.attrs.navBean.applicationUrl}export?format=rdf&amp;type=image&amp;n=10000&amp;col=#{cc.attrs.contextId.trim()}&amp;q=#{cc.attrs.exportQuery.trim()}" target="_blank">
										<h:outputText value="#{lbl.export_rdf}"/>
									</h:outputLink>
								</li>
								<li>
									<h:outputLink value="#{cc.attrs.navBean.applicationUrl}export?format=xml&amp;type=image&amp;n=10000&amp;col=#{cc.attrs.contextId.trim()}&amp;q=#{cc.attrs.exportQuery.trim()}" target="_blank">
										<h:outputText value="#{lbl.export_native}"/>
									</h:outputLink>
								</li>
							</ul>
						</div>
					</div>
				</ui:fragment>
				
				
				
			</ui:fragment> <!-- END if user logged in -->
		</div>
	</composite:implementation>
</html>